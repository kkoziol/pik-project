<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<http>
		<!-- which URLS are secured -->
		<intercept-url pattern="/welcome*" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')" />
		<form-login login-page="/login" username-parameter="ssoId"
			password-parameter="password" default-target-url="/welcome"
			authentication-failure-url="/loginfailed" />
		<logout logout-success-url="/logout" />
	</http>

	<!-- BEANS FOR USERCONTROLLER (with that it doesnt need autowired annotation -->
	<b:bean id="userDao" class="com.daos.UserDaoImpl">
		<b:property name="sessionFactory" ref="sessionFactory" />
	</b:bean>
	<b:bean id="userService" class="com.services.UserServiceImpl">
		<b:property name="userDao" ref="userDao"></b:property>
	</b:bean>

	<b:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<b:property name="driverClassName" value="org.postgresql.Driver" />
		<b:property name="url" 
		value="jdbc:postgresql://ec2-46-137-97-169.eu-west-1.compute.amazonaws.com:5432/d7i9471sfdmfb7?sslmode=require" />
		<b:property name="username" value="luityjugsqtzeu" />
		<b:property name="password" value="d67a0abcd69f25f08037bbe87597a80be2d7e28c87a6aeceebd0777b0709bdfc" />
	</b:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<b:bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<b:property name="dataSource" ref="dataSource" />
		<b:property name="annotatedClasses">
			<b:list>
				<b:value>com.model.User</b:value>
			</b:list>
		</b:property>
		<b:property name="hibernateProperties">
			<b:props>
				<b:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</b:prop>
				<b:prop key="connection_pool_size">1</b:prop>
				<b:prop key="hibernate.current_session_context_class">thread</b:prop>
				<b:prop key="hibernate.show_sql">true</b:prop>
				<!-- CREATE DATABASE -->
				<!-- <b:prop key="hibernate.hbm2ddl.auto">create</b:prop>  -->
			</b:props>
		</b:property>
	</b:bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<b:bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<b:property name="sessionFactory" ref="sessionFactory" />
	</b:bean>


	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT LOGIN, PASSWORD, 1 FROM Users WHERE LOGIN = ?"
				authorities-by-username-query="SELECT LOGIN, AUTHORITIES FROM Users WHERE LOGIN = ?  " />
		</authentication-provider>
	</authentication-manager>

	<b:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<b:constructor-arg name="strength" value="10" />
	</b:bean>

</b:beans>